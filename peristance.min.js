const e=["7","8","9"],t=["2","3"],s={value:0,persistance:0},o=e=>"0"===e,l=e=>"5"===e,r=(e,t=1)=>{let s=Array(t),o=[],l=r=>{if(r!==t)for(let t of e)s[r]=t,t=void 0,l(r+1);else o.push(s.slice())};return l(0),s=void 0,o},n=(e,t=e,r=0)=>{if(r++,1===t.length)return{value:e,persistance:--r};if(t.some(o))return{value:e,persistance:++r};if(t.some(l)&&s.persistance>r+1)return{value:e,persistance:r};let i=1;return t.map(e=>i*=parseInt(e)),n(e,i.toString().split(""),r)},i=(o={value:0,persistance:0})=>{if(!global.gc)return void console.log("Garbage collection is not exposed\nrun with '--expose_gc'");Object.assign(s,o);let l=s.persistance+1;for(;;){global.gc(),console.log("\tAt size ->",l);let o=r(e,l);for(let e of t.map(e=>o.map(t=>[e,t].flat())).flat()){let t=n(e);e=void 0,t.persistance>s.persistance?(Object.assign(s,t),console.log("\nFound ->",t,"\n")):t=void 0}o=void 0,l++}};i(),module.exports=i,module.exports.calculate=n,module.exports.combine=r;
