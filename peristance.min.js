const e=["7","8","9"],o=["2","3"],t={value:0,persistance:0},s=e=>"0"===e,l=(e,o=1)=>{let t=Array(o),s=[],l=n=>{if(n!==o)for(let o of e)t[n]=o,o=void 0,l(n+1);else s.push(t.slice())};return l(0),t=void 0,s},n=(e,o=e,t=0)=>{if(t++,1===o.length)return{value:e,persistance:--t};if(o.some(s))return{value:e,persistance:++t};let l=1;return o.map(e=>l*=parseInt(e)),n(e,l.toString().split(""),t)},r=(s={value:0,persistance:0})=>{if(!global.gc)return void console.log("Garbage collection is not exposed\nrun with '--expose_gc'");Object.assign(t,s);let r=t.persistance+1;for(;;){global.gc(),console.log("\tAt size ->",r);let s=l(e,r);for(let e of o.map(e=>s.map(o=>[e,o].flat())).flat()){let o=n(e);e=void 0,o.persistance>t.persistance?(Object.assign(t,o),console.log("\nFound ->",o,"\n")):o=void 0}s=void 0,r++}};r(),module.exports=r,module.exports.calculate=n,module.exports.combine=l;
