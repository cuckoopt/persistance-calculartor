const e=["7","8","9"],t=["2","3"],o={value:0,persistance:0},s=(e,t=1)=>{let o=Array(t),s=[],l=r=>{if(r!==t)for(let t of e)o[r]=t,t=void 0,l(r+1);else s.push(o.slice())};return l(0),o=void 0,s},l=(e,t=e,o=0)=>{if(o++,1===t.length)return{value:e,persistance:--o};if(0===t[0])return{value:e,persistance:++o};let s=1;return t.map(e=>s*=parseInt(e)),l(e,s.toString().split("").sort(),o)},r=(r={value:0,persistance:0})=>{if(!global.gc)return void console.log("Garbage collection is not exposed\nrun with '--expose_gc'");Object.assign(o,r);let n=o.persistance+1;for(;;){global.gc(),console.log("\tAt size ->",n);let r=s(e,n);for(let e of t.map(e=>r.map(t=>[e,t].flat())).flat()){let t=l(e);if(e=void 0,t.persistance>o.persistance){Object.assign(o,t),console.log("\nFound ->",t,"\n");break}t=void 0}r=void 0,n++}};r(),module.exports=r,module.exports.calculate=l,module.exports.combine=s;
