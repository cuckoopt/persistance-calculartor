const e=["7","8","9"],n=["2","3"],l={value:0,persistance:0},s=(e,n,l)=>{if(1===n.length)return{value:e,persistance:l};if(n.includes("0")||n.includes("5")&&(n.includes("2")||n.includes("4")||n.includes("6")||n.includes("8")))return{value:e,persistance:l+2};l++;let o=1;return n.split("").map(e=>o*=e),s(e,o.toString(),l)},o=(t,c)=>{if(c.length===t)n.map(e=>{let n=s(e+c,e+c,0);n.persistance>l.persistance&&(n.value=parseInt(n.value),Object.assign(l,n),console.log("\nFound ->",n)),n=void 0});else for(let n of e)o(t,c+n)};console.log("\nRunning persistance calculator\n------------------------------\n"),(()=>{if(global.gc)for(let e=1;;e++)console.log("\tAt size ->",e),o(e,""),global.gc();else console.log("Garbage collection is not exposed\nrun with '--expose_gc'")})();
