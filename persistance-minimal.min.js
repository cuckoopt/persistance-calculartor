const e=["7","8","9"],n=["2","3"],l={value:0,persistance:0},o=(e,n,l)=>{if(1===n.length)return{value:e,persistance:l};if(n.includes("0"))return{value:e,persistance:l+2};l++;let s=1;return n.split("").map(e=>s*=e),o(e,s.toString(),l)},s=(t,c)=>{if(c.length===t)n.map(e=>{let n=o(e+c,e+c,0);n.persistance>l.persistance&&(Object.assign(l,n),console.log("\nFound ->",n)),n=void 0});else for(let n of e)s(t,c+n)};console.log("\nRunning persistance calculator\n------------------------------\n"),(()=>{if(global.gc)for(let e=1;;e++)console.log("\tAt size ->",e),s(e,""),global.gc();else console.log("Garbage collection is not exposed\nrun with '--expose_gc'")})();
